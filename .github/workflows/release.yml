name: Release

on:
  push:
    tags:
      - 'v*'  # e.g. v1.0.0

jobs:
  build:
    name: Build Go and C# for all platforms
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Setup Go ---
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Build Go binaries (Windows, macOS, Linux)
        run: |
          mkdir -p dist/go
          cd go
          GOOS=windows GOARCH=amd64 go build -o ../dist/go/webscraper-go-windows.exe main.go
          GOOS=darwin  GOARCH=arm64 go build -o ../dist/go/webscraper-go-macos-arm64 main.go
          GOOS=linux   GOARCH=amd64 go build -o ../dist/go/webscraper-go-linux main.go

      # --- Setup .NET ---
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore and publish .NET binaries (Windows, macOS, Linux)
        run: |
          cd csharp/WebScraper.Cli
          dotnet restore

          mkdir -p ../../dist/csharp

          # Windows
          dotnet publish -c Release -r win-x64 --self-contained true -o ../../dist/csharp/win
          mv ../../dist/csharp/win/WebScraper.Cli.exe ../../dist/csharp/webscraper-csharp-windows.exe

          # macOS (Apple Silicon)
          dotnet publish -c Release -r osx-arm64 --self-contained true -o ../../dist/csharp/macos
          mv ../../dist/csharp/macos/WebScraper.Cli ../../dist/csharp/webscraper-csharp-macos-arm64

          # Linux
          dotnet publish -c Release -r linux-x64 --self-contained true -o ../../dist/csharp/linux
          mv ../../dist/csharp/linux/WebScraper.Cli ../../dist/csharp/webscraper-csharp-linux

      # --- Upload build artifacts ---
      - name: Upload all binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: dist/*

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production
      url: https://github.com/${{ github.repository }}/releases

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: dist

      - name: Zip each platformâ€™s binaries
        run: |
          cd dist
          zip -r webscraper-go.zip go/
          zip -r webscraper-csharp.zip csharp/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
